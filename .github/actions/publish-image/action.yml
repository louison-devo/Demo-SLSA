name: Publish image

description: Publish container image on container registry

inputs:
  go-version:
    required: true
    description: go version to install on the runner
  github_token: 
    required : true
    description: github token used for the release
  registry_username:
    required: true
    description: Container registry username
  registry_password:
    required: true
    description: Container registry password 
  registry:
    required: true 
    description: registry used to publish container images


outputs:
  name: 
    value: ${{ steps.image.outputs.name }}
    description: name of the published container image
  digest: 
    value: ${{ steps.image.outputs.digest }}
    description: published image digest

runs: 
  using: composite
  steps:
    # Install go with specific version
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ inputs.go-version }} # same version than the one in the go.mod or in the .go-version
     # Register to ghcr.io container Registry
    - name: 'Login to GitHub Container Registry'
      uses: docker/login-action@v1
      with:
        registry: ${{ inputs.registry}}
        username: ${{ inputs.registry_username }}
        password: ${{ inputs.registry_password }} 
    # Install ko to publish container images
    - name: Set up Ko
      uses: ko-build/setup-ko@v0.6
    # Run command goreleaser release based on .goreleaser.yml
    # LDFLAGS are passed thanks to the steps.job_id.outputs.variable_name variable
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v5
      id: goreleaser 
      with:
        distribution: goreleaser 
        version: latest
        args: release --config=goreleaser.yml --skip=publish,announce,sign,sbom --rm-dist
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
    # Get artifacts from the goreleaser's step outputs to retrieve Docker Manifest containing the image and its digest
    # Image Provenance generator action needs to have the image name and a digest for generating provenance and publish it to the container registry
    - shell: bash 
      name: Image digest
      id: image
      env:
        ARTIFACTS: "${{ steps.goreleaser.outputs.artifacts }}"
      run: |
          set -euo pipefail
          image_and_digest=$(echo "$ARTIFACTS" | jq -r '.[] | select (.type=="Docker Manifest") | .path')
          image=$(echo "${image_and_digest}" | cut -d'@' -f1 | cut -d':' -f1)
          digest=$(echo "${image_and_digest}" | cut -d'@' -f2)
          echo "name=$image" >> "$GITHUB_OUTPUT"
          echo "digest=$digest" >> "$GITHUB_OUTPUT"